CREATE DATABASE Sales;
USE Sales;

CREATE TABLE Sale (
   sale_ID INT NOT NULL AUTO_INCREMENT,
     sale_name VARCHAR(30) NOT NULL,
        sale_last_name VARCHAR(30) NOT NULL,
         sale_age SMALLINT NOT NULL,
           sale_purchase_item ENUM('TV','SMARTPHONE','JUICER','HEADPHONES','KEYBOARD') DEFAULT NULL,
             sale_count INT NOT NULL,
                sale_amount FLOAT NOT NULL,
                    sale_purchase_date DATE NOT NULL,
                     PRIMARY KEY ( sale_ID)
);
/*
Добавление дат на прошлый месяц для списка покупок за месяц
для: Вывести самый покупаемый товар за последний месяц
*/

INSERT INTO sale (sale_name, sale_last_name, sale_age, sale_purchase_item, sale_count, sale_amount, sale_purchase_date)
VALUES ('Sam', 'Cooper', 18, 'SMARTPHONE', 40, 44.3, DATE_SUB(curdate(),Interval 1 week));
INSERT INTO sale (sale_name, sale_last_name, sale_age, sale_purchase_item, sale_count, sale_amount, sale_purchase_date)
VALUES ('Sam', 'Cooper', 18, 'SMARTPHONE', 40, 44.3, DATE_SUB(curdate(),Interval 2 week));

INSERT INTO sale (sale_name, sale_last_name, sale_age, sale_purchase_item, sale_count, sale_amount, sale_purchase_date)
VALUES ('Sam', 'Cooper',  18, 'KEYBOARD', 40, 44.3, DATE_SUB(curdate(),Interval 3 week));

INSERT INTO sale (sale_name, sale_last_name, sale_age, sale_purchase_item, sale_count, sale_amount, sale_purchase_date)
VALUES ('Sam', 'Cooper',  18, 'HEADPHONES', 40, 44.3, DATE_SUB(curdate(),Interval 4 week));

INSERT INTO sale (sale_name, sale_last_name, sale_age, sale_purchase_item, sale_count, sale_amount, sale_purchase_date)
VALUES ('Sam', 'Cooper',  18, 'TV', 40, 44.3, DATE_SUB(curdate(),Interval 4 week));

INSERT INTO sale (sale_name, sale_last_name, sale_age, sale_purchase_item, sale_count, sale_amount, sale_purchase_date)
VALUES ('Sam', 'Cooper',  18, 'TV', 40, 44.3, DATE_SUB(curdate(),Interval 6 week));


SELECT sale_purchase_item FROM sales.sale
WHERE `sale_purchase_date` >= DATE_SUB(curdate(), INTERVAL 1 MONTH)
AND `sale_purchase_date` <= CURDATE()
GROUP BY sale_purchase_item
HAVING COUNT(sale_purchase_item) =
(SELECT MAX(cf_num)
           FROM (
          SELECT COUNT(sale_purchase_item), COUNT(*) AS cf_num FROM sales.sale
          WHERE sale_purchase_date >= DATE_SUB(curdate(), INTERVAL 1 MONTH)
			AND sale_purchase_date <= CURDATE()
			GROUP BY sale_purchase_item
              ) t1 )